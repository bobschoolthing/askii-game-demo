# -*- coding: utf-8 -*-
"""
Created on Wed Feb 26 12:49:51 2025

@author: 188123
"""

import sys
class Main_menu:
    def __init__(self):
        self.menu = True
        self.stats_menu = False
        self.play = False
        self.player_race = None
        self.display_menu()
        self.game = False

    def display_menu(self):
        while self.menu:
            print("  Welcome to the game  ")
            print("\n1, New Game")
            print("2, Load Game")
            print("3, Quit Game")
            self.choice = input("")
            if self.choice == "1":
                self.menu = False
                self.stats_menu = True
                self.setup_stats_menu()  # Loads into stats menu 
            elif self.choice == "2":
                self.menu = False
                self.play = True 
            elif self.choice == "3":
                sys.exit()

    def setup_stats_menu(self):
        while self.stats_menu:
            print("\n** Stats Menu **")
            races = ["orc", "elf"]
            self.player_race = input(f"What race do you want to be? ({', '.join(races)}): ")
            if self.player_race not in races:
                print("Race must be one of the two shown on screen")
            else:
                self.stats_menu = False
                self.game = Game(self.player_race)
                self.game.print_map()

class Game:
    def __init__(self, player_race):
        self.player_icon = "@"
        self.player_position = [3, 46]  # Starting position of the player
        self.health = 100
        self.map_width = 50
        self.map_height = 19
        self.player_race = player_race
        self.ascii_map = [
            "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
            "xxxxxxxxxxxxxxxxxxxx............................x",
            "xxxxxxxxxxxxxxx................................x",
            "xxxxxxxxxxxx...................................x",
            "x.............................T.....O...........x",
            "x................................E..............x",
            "x...............................................x",
            "x..............T................................x",
            "x...............................................x",
            "x...................................xxxxxxxxxx.x",
            "x............................xxxxxxxxxxxxxxxxxxxx",
            "O..................................xxxxxxxxxx.x",
            "O..................................xxxxxxxxxx.x",
            "O..................................xxxxxxxxxx.x",
            "x.............................xxxxxxxxxxxxxxxxxx",
            "x..............T..............xxxxxxxxxxxxxxxxxx",
            "x...............................................x",
            "x...............................................x",
            "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
        ]
        self.game_over = False # used so the game knows that it has not been complete so that it can stop all function but the objective code after it is run

    def player_movement(self):
        if self.game_over:
            return
        move = input("Move (WASD): ").lower()
        if move == "w" and self.player_position[0] > 0:
            self.player_position[0] -= 1
        elif move == "s" and self.player_position[0] < self.map_height - 1:
            self.player_position[0] += 1
        elif move == "a" and self.player_position[1] > 0:
            self.player_position[1] -= 1
        elif move == "d" and self.player_position[1] < self.map_width - 1:
            self.player_position[1] += 1
           
        print(f"New player position: {self.player_position}")

    def death(self):
        print("You died: game over!")
        sys.exit()

    def trap(self):
        y, x = self.player_position
        trap_character = "T"
        if self.ascii_map[y][x] == trap_character:
            self.health -= 10
            print(f"You stepped on a trap. Health: {self.health}")
            if self.health <= 0:
                self.death()

    def objective(self):
        y, x = self.player_position
        objective_symbol = "O"
        if self.ascii_map[y][x] == objective_symbol:
            self.objectivedone()
            self.game_over = True

    def objectivedone(self):
        print("You completed the demo!")

    def attack(self):
        pass
               
    def enemy(self,player_position):
        enemy_charachter = "E"
        enemy_charachter = [5,33]
        if self.player_position == enemy_charachter:
            print("your at an enemy")
            
    def print_map(self):
        map_lines = self.ascii_map[:]
        y, x = self.player_position
        map_lines[y] = map_lines[y][:x] + self.player_icon + map_lines[y][x + 1:]
        print("\n".join(map_lines))
        self.game_loop()

    def game_loop(self):
        while not self.game_over:
            self.player_movement()
            self.trap()
            self.objective()
            self.print_map()
            self.attack()
            self.enemy()  


if __name__ == "__main__":
    main_menu = Main_menu()
